{"version":3,"file":"817.js","mappings":"qSAUA,MAmFA,EAnFcA,KACZ,MAAM,KAAEC,EAAI,MAAEC,EAAK,WAAEC,EAAU,OAAEC,IAAWC,EAAAA,EAAAA,IAAQ,GAAEC,EAAAA,EAAAA,OAAAA,gBAAgCC,EAAAA,IAC/EC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KAEtCC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,KACvCG,EAAWC,IAAgBP,EAAAA,EAAAA,WAAS,GAIrCQ,IAFWC,EAAAA,EAAAA,OAEAC,EAAAA,EAAAA,cACdC,IACCA,EAAEC,iBACEX,GAASG,GACXG,GAAa,GACbM,IAAAA,KAEK,GAAEjB,EAAAA,EAAAA,OAAAA,sBACH,CAAEK,QAAOG,YACT,CACEU,iBAAiB,IAGpBC,MAAMC,IACLvB,GAAY,IAEbwB,OAAOzB,IACyB,MAA3BA,EAAMwB,UAAUE,QAClBnB,EAAc,2BAChB,IAEDoB,SAAQ,KACPZ,GAAa,EAAM,KAGlBN,EAEMA,IAAUG,GACnBL,EAAc,iBAFdA,EAAc,eAIlB,GAEF,CAACE,EAAOG,KAGV,YAAagB,IAAT7B,GACK8B,EAAAA,EAAAA,IAACC,EAAAA,EAAO,MAGb/B,GAEK8B,EAAAA,EAAAA,IAACE,EAAAA,GAAQ,CAACC,GAAG,mBAGpBH,EAAAA,EAAAA,IAACI,EAAAA,GAAc,MACbJ,EAAAA,EAAAA,IAACK,EAAAA,GAAM,KAAC,WACRL,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACnB,SAAUA,IACda,EAAAA,EAAAA,IAACO,EAAAA,GAAK,MACJP,EAAAA,EAAAA,IAAA,YAAM,WACNA,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAACQ,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,QAAQC,MAAOhC,EAAOiC,SAAUhC,OAGxEmB,EAAAA,EAAAA,IAACO,EAAAA,GAAK,MACJP,EAAAA,EAAAA,IAAA,YAAM,SACNA,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAACQ,EAAAA,GAAK,CAACC,KAAK,WAAWC,GAAG,WAAWC,KAAK,WAAWC,MAAO7B,EAAU8B,SAAU7B,KAEjFP,IAAcuB,EAAAA,EAAAA,IAACc,EAAAA,GAAK,KAAErC,GACtBQ,GAAYe,EAAAA,EAAAA,IAACC,EAAAA,EAAO,OAAcD,EAAAA,EAAAA,IAAAe,EAAAA,SAAA,QAErCf,EAAAA,EAAAA,IAACgB,EAAAA,GAAU,CAACP,KAAK,SAASQ,MAAM,UAAUC,aAAa,QAAO,SAIhElB,EAAAA,EAAAA,IAACmB,EAAAA,GAAe,KAAC,kBAEfnB,EAAAA,EAAAA,IAACoB,EAAAA,GAAI,CAACjB,GAAG,WAAU,SAEN,C","sources":["webpack://stock-calendar-ts-front/./pages/Login/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { FillButton, Form, Header, Input, Label, LoginContainer, SignUpContainer, Error } from './styles';\r\nimport useSWR from 'swr';\r\nimport useInput from '@hooks/useInput';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\r\nimport defines from '@constants/defines';\r\nimport Loading from '@components/Loading/Loading';\r\n\r\nconst Login = () => {\r\n  const { data, error, revalidate, mutate } = useSWR(`${defines.server.url}/api/users`, fetcher);\r\n  const [logInError, setLogInError] = useState('');\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (email && password) {\r\n        setIsLoading(true);\r\n        axios\r\n          .post(\r\n            `${defines.server.url}/api/users/login`,\r\n            { email, password },\r\n            {\r\n              withCredentials: true,\r\n            },\r\n          )\r\n          .then((response) => {\r\n            revalidate();\r\n          })\r\n          .catch((error) => {\r\n            if (error.response?.status === 401) {\r\n              setLogInError('이메일과 비밀번호 조합이 일치하지 않습니다.');\r\n            }\r\n          })\r\n          .finally(() => {\r\n            setIsLoading(false);\r\n          });\r\n      } else {\r\n        if (!email) {\r\n          setLogInError('아이디를 입력해주세요.');\r\n        } else if (email && !password) {\r\n          setLogInError('비밀번호를 입력해주세요.');\r\n        }\r\n      }\r\n    },\r\n    [email, password],\r\n  );\r\n\r\n  if (data === undefined) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (data) {\r\n    // navigate('/stock-record');\r\n    return <Navigate to=\"/stock-record\"></Navigate>;\r\n  }\r\n  return (\r\n    <LoginContainer>\r\n      <Header>주식 캘린더</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label>\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n          {logInError && <Error>{logInError}</Error>}\r\n          {isLoading ? <Loading></Loading> : <></>}\r\n        </Label>\r\n        <FillButton type=\"submit\" color=\"#60d6bf\" marginBottom=\"20px\">\r\n          로그인\r\n        </FillButton>\r\n      </Form>\r\n      <SignUpContainer>\r\n        아직 회원이 아니신가요?&nbsp;\r\n        <Link to=\"/signup\">회원가입</Link>\r\n      </SignUpContainer>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","data","error","revalidate","mutate","useSWR","defines","fetcher","logInError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","isLoading","setIsLoading","onSubmit","useNavigate","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","status","finally","undefined","___EmotionJSX","Loading","Navigate","to","LoginContainer","Header","Form","Label","Input","type","id","name","value","onChange","Error","React","FillButton","color","marginBottom","SignUpContainer","Link"],"sourceRoot":""}