{"version":3,"file":"817.js","mappings":"oQAsBA,MAmEA,EAnEcA,KACZ,MAAM,KAAEC,EAAI,MAAEC,EAAK,WAAEC,EAAU,OAAEC,IAAWC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,IAC1DC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,IACxCG,GAAWC,EAAAA,EAAAA,cACdC,IACCA,EAAEC,iBACFV,GAAc,GACdW,IAAAA,KAEI,mBACA,CAAET,QAAOG,YACT,CACEO,iBAAiB,IAGpBC,MAAMC,IACLnB,GAAY,IAEboB,OAAOrB,IACNM,EAAyC,MAA3BN,EAAMoB,UAAUE,OAAe,GAC7C,GAEN,CAACd,EAAOG,IAcV,OACEY,EAAAA,EAAAA,IAACC,EAAAA,GAAc,MACbD,EAAAA,EAAAA,IAACE,EAAAA,GAAM,KAAC,WACRF,EAAAA,EAAAA,IAACG,EAAAA,GAAI,CAACb,SAAUA,IACdU,EAAAA,EAAAA,IAACI,EAAAA,GAAK,MACJJ,EAAAA,EAAAA,IAAA,YAAM,WACNA,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAACK,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,QAAQC,MAAOxB,EAAOyB,SAAUxB,OAGxEc,EAAAA,EAAAA,IAACI,EAAAA,GAAK,MACJJ,EAAAA,EAAAA,IAAA,YAAM,SACNA,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAACK,EAAAA,GAAK,CAACC,KAAK,WAAWC,GAAG,WAAWC,KAAK,WAAWC,MAAOrB,EAAUsB,SAAUrB,KAEjFP,IAAckB,EAAAA,EAAAA,IAACW,EAAAA,GAAK,KAAC,8BAExBX,EAAAA,EAAAA,IAACY,EAAAA,GAAU,CAACN,KAAK,SAASO,MAAM,UAAUC,aAAa,QAAO,SAIhEd,EAAAA,EAAAA,IAACe,EAAAA,GAAe,KAAC,kBAEff,EAAAA,EAAAA,IAACgB,EAAAA,GAAI,CAACC,GAAG,WAAU,SAEN,C","sources":["webpack://stock-calendar-ts-front/./pages/Login/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  FillButton,\r\n  Form,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  LoginContainer,\r\n  LoginContents,\r\n  SignUpContainer,\r\n  Error,\r\n} from './styles';\r\n// import { Link, Redirect, useNavigate } from 'react-router-dom';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport useSWR from 'swr';\r\nimport useInput from '@hooks/useInput';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const { data, error, revalidate, mutate } = useSWR('/api/users', fetcher);\r\n  const [logInError, setLogInError] = useState(false);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setLogInError(false);\r\n      axios\r\n        .post(\r\n          '/api/users/login',\r\n          { email, password },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then((response) => {\r\n          revalidate();\r\n        })\r\n        .catch((error) => {\r\n          setLogInError(error.response?.status === 401);\r\n        });\r\n    },\r\n    [email, password],\r\n  );\r\n\r\n  // if (data === undefined) {\r\n  //   return <div>로딩중...</div>;\r\n  // }\r\n  //const navigate = useNavigate();\r\n\r\n  //if (data) {\r\n  // return <Redirect to=\"/stockrecord\" />;\r\n  // return <Redirect to=\"/main\" />;\r\n  // navigate('/stockrecord');\r\n  //}\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <Header>주식 캘린더</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label>\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\r\n        </Label>\r\n        <FillButton type=\"submit\" color=\"#60d6bf\" marginBottom=\"20px\">\r\n          로그인\r\n        </FillButton>\r\n      </Form>\r\n      <SignUpContainer>\r\n        아직 회원이 아니신가요?&nbsp;\r\n        <Link to=\"/signup\">회원가입</Link>\r\n      </SignUpContainer>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","data","error","revalidate","mutate","useSWR","fetcher","logInError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","status","___EmotionJSX","LoginContainer","Header","Form","Label","Input","type","id","name","value","onChange","Error","FillButton","color","marginBottom","SignUpContainer","Link","to"],"sourceRoot":""}