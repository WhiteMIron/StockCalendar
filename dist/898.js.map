{"version":3,"file":"898.js","mappings":"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","sources":["webpack://stock-calendar-ts-front/./pages/SignUp/styles.tsx","webpack://stock-calendar-ts-front/./pages/SignUp/index.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const SingUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 108px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\r\n  font-weight: 700;\r\n  font-size: 48px;\r\n  line-height: 46px;\r\n  letter-spacing: -0.75px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  color: #e01e5a;\r\n  margin: 8px 0 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Success = styled.div`\r\n  color: #2eb67d;\r\n  font-weight: bold;\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Header, SingUpContainer, Success, Error } from './styles';\r\nimport { FillButton, Form, Input, Label, SignUpContainer } from '@pages/Login/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport useInput from '@hooks/useInput';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport defines from '@constants/defines';\r\n\r\nconst SignUp = () => {\r\n  const { data, error, revalidate } = useSWR(`${defines.server.url}/api/users`, fetcher);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, , setPassword] = useInput('');\r\n  const [passwordCheck, , setPasswordCheck] = useInput('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(e.target.value !== passwordCheck);\r\n    },\r\n    [passwordCheck],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMismatchError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n\r\n      if (!mismatchError && email && password && passwordCheck) {\r\n        setSignUpSuccess(false);\r\n        axios\r\n          .post(`${defines.server.url}/api/users`, {\r\n            email,\r\n            password,\r\n          })\r\n          .then((response) => {\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      } else {\r\n        if (!email) {\r\n          setSignUpError('아이디를 입력해주세요.');\r\n        } else if (email && !password) {\r\n          setSignUpError('비밀번호를 입력해주세요.');\r\n        } else {\r\n          setSignUpError('비밀번호가 일치하지 않습니다.');\r\n        }\r\n      }\r\n    },\r\n    [email, password, mismatchError],\r\n  );\r\n\r\n  if (data === undefined) {\r\n    return <div>로딩중...</div>;\r\n  }\r\n\r\n  return (\r\n    <SingUpContainer>\r\n      <Header>주식 캘린더</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label>\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n          </div>\r\n\r\n          {!signUpError && mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {signUpError && <Error>{signUpError}</Error>}\r\n\r\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\r\n        </Label>\r\n        <FillButton type=\"submit\" color=\"#60d6bf\" marginBottom=\"20px\">\r\n          회원가입\r\n        </FillButton>\r\n      </Form>\r\n      <SignUpContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/login\">로그인</Link>\r\n      </SignUpContainer>\r\n    </SingUpContainer>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["SingUpContainer","_styled","target","name","styles","Header","Error","Success","SignUp","data","error","revalidate","useSWR","defines","fetcher","email","onChangeEmail","useInput","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","useState","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","value","onChangePasswordCheck","onSubmit","preventDefault","axios","then","response","catch","console","log","finally","undefined","___EmotionJSX","Form","Label","Input","type","id","onChange","FillButton","color","marginBottom","SignUpContainer","Link","to"],"sourceRoot":""}